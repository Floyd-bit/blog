(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{617:function(_,v,t){"use strict";t.r(v);var r=t(11),s=Object(r.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h3",{attrs:{id:"_1-https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-https"}},[_._v("#")]),_._v(" 1. HTTPS")]),_._v(" "),t("blockquote",[t("p",[_._v("HTTPS = HTTP + TLS(SSL)")])]),_._v(" "),t("p",[t("strong",[_._v("HTTPS解决了三个问题：防窃听、防篡改、身份认证")])]),_._v(" "),t("p",[t("strong",[_._v("防窃听")]),_._v("：HTTP使用明文传输，双方会话的信息很容易可以被第三方获取到；HTTPS通过结合使用"),t("strong",[_._v("对称加密算法和非对称加密算法")]),_._v("加密会话的内容，防止被窃听。")]),_._v(" "),t("p",[t("strong",[_._v("防篡改")]),_._v("：采用"),t("strong",[_._v("数字签名")]),_._v("技术来保证接收方接收的数据没有被别人修改过。数字签名("),t("strong",[_._v("用私钥加密过的摘要")]),_._v(")类似于校验码，会附加在要传输的原信息的尾部，一般通过私钥加密"),t("strong",[_._v("摘要算法")]),_._v("实现。摘要算法即原文件的一个哈希映射，接收方接收到信息后"),t("strong",[_._v("对原文件计算得到摘要m")]),_._v("，然后再用对方的"),t("strong",[_._v("公钥解密数字签名得到摘要n")]),_._v(",通过对比摘要m和摘要n来判断原文件是否被篡改。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041454820.jpg",alt:""}})]),_._v(" "),t("p",[t("strong",[_._v("身份认证")]),_._v("：前两点保证了会话不被第三方获取以及通信内容不被篡改，但是存在"),t("strong",[_._v("中间人攻击")]),_._v("的风险。需要**数字证书颁发机构(CA)**对服务端的公钥进行加密(使用机构私钥加密)，也就是证书。")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041454821.jpg",alt:""}})]),_._v(" "),t("h3",{attrs:{id:"_2-tls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-tls"}},[_._v("#")]),_._v(" 2. TLS")]),_._v(" "),t("p",[_._v("TLS协议位于传输层之上，应用层之下")]),_._v(" "),t("p",[_._v("TLS中使用了两种加密技术——对称加密、非对称加密")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("对称加密")]),_._v(" "),t("p",[_._v("概述：对称加密即两边拥有相同的密钥，都知道加密和解密的方法")]),_._v(" "),t("p",[_._v("缺点：密钥可能被黑客拦截，从而可以获取和篡改双方通信信息")])]),_._v(" "),t("li",[t("p",[_._v("非对称加密")]),_._v(" "),t("p",[_._v("分为"),t("strong",[_._v("公钥")]),_._v("和"),t("strong",[_._v("私钥")]),_._v("，加密时使用公钥，解密时使用私钥("),t("strong",[_._v("加密性")]),_._v(")；加密时用私钥，解密时用公钥("),t("strong",[_._v("身份验证")]),_._v("，因为私钥是唯一的，可以验证身份的唯一性)")])]),_._v(" "),t("li",[t("p",[_._v("摘要算法")]),_._v(" "),t("p",[_._v("使用SHA-1或SHA-2散列函数加密算法，验证数据的"),t("strong",[_._v("完整性")]),_._v("(对数据进行变换，计算出摘要，通过对比摘要判断是否被篡改)")])]),_._v(" "),t("li",[t("p",[_._v("TLS握手过程")]),_._v(" "),t("p",[_._v("TLS握手阶段，两端使用非对称加密方式来通信("),t("strong",[_._v("非对称加密会话密钥")]),_._v(")，但在正式传输数据时，两端使用对称加密的方式来通信")]),_._v(" "),t("p",[t("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041454822.png",alt:"image-20220118212903471"}})]),_._v(" "),t("ol",[t("li",[_._v("客户端发送数据，包括"),t("strong",[_._v("随机值")]),_._v("、需要的协议、加密方式")]),_._v(" "),t("li",[_._v("服务端收到后也生成一个"),t("strong",[_._v("随机值")]),_._v("，并根据协议和加密方式发送自己的证书(CA)")]),_._v(" "),t("li",[_._v("客户端收到服务端的证书并验证，再生成一个"),t("strong",[_._v("随机值")]),_._v("，通过"),t("strong",[_._v("服务端证书的公钥去加密")]),_._v("并发送给服务端")]),_._v(" "),t("li",[_._v("服务端收到后用"),t("strong",[_._v("私钥解密")]),_._v("获得第三个随机值，这样两端都有三个随机值，可以通过这三个随机值按照约定的加密方式生成"),t("strong",[_._v("会话密钥")])])])])]),_._v(" "),t("h3",{attrs:{id:"_3-中间人攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-中间人攻击"}},[_._v("#")]),_._v(" 3. 中间人攻击")]),_._v(" "),t("p",[t("strong",[_._v("过程")]),_._v("：中间人伪造一对"),t("mark",[_._v("公钥和私钥")]),_._v("，然后将"),t("mark",[_._v("伪造公钥")]),_._v("发送给客户端，客户端用"),t("mark",[_._v("伪造公钥")]),_._v("加密信息后发送给中间人，中间人使用"),t("mark",[_._v("伪造私钥")]),_._v("解密后得到客户端发送的消息并篡改。然后中间人伪造成客户端与服务器建立连接，使用服务器的公钥加密篡改后的信息发送给服务器，完成对信息的篡改")]),_._v(" "),t("p",[t("strong",[_._v("解决方法")]),_._v("：利用"),t("mark",[_._v("CA证书")]),_._v("进行对服务器身份的认证")]),_._v(" "),t("p",[t("strong",[_._v("CA证书认证原理")]),_._v("：服务器将公钥发给证书机构申请证书，证书机构生成"),t("mark",[_._v("机构公钥、机构私钥")]),_._v("，使用"),t("mark",[_._v("机构私钥")]),_._v("对服务器公钥、证书签名一起打包成证书，重新发回给服务端。客户端在验证服务端身份时，使用对应证书机构的"),t("mark",[_._v("机构公钥")]),_._v("对证书签名进行解密并验证签名规则，从而确认服务端的身份。")])])}),[],!1,null,null,null);v.default=s.exports}}]);