(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{660:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("SPA（单页面应用）需要路由")])]),t._v(" "),a("h3",{attrs:{id:"_1-hash路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-hash路由"}},[t._v("#")]),t._v(" 1. Hash路由")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("url中带#, 例如"),a("code",[t._v("www.abc.com/#/vue")]),t._v(", 它的hash值是"),a("code",[t._v("#/vue")])])]),t._v(" "),a("li",[a("p",[t._v("hash变化会触发网页跳转，即浏览器的前进后退，且"),a("strong",[t._v("不会刷新页面")]),t._v("（页面的hash与对应的url关联起来）")])]),t._v(" "),a("li",[a("p",[t._v("触发hash变化：js修改url   手动修改url的hash   浏览器前进后退")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hash模式通过window的onhashchange事件监听并加载响应的代码")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onhashchange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("oldURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newURL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-history路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-history路由"}},[t._v("#")]),t._v(" 2. History路由")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("url规范")]),t._v("的路由，跳转时不刷新页面")]),t._v(" "),a("li",[t._v("需要"),a("strong",[t._v("后端配置")]),t._v("，始终返回index.html，若后台没有配置正确则会返回404")]),t._v(" "),a("li",[a("code",[t._v("history.pushState()")]),t._v(" 或 "),a("code",[t._v("history.replaceState()")]),t._v(" 不会触发 "),a("code",[t._v("popstate")]),t._v(" 事件，这时我们需要手动触发页面渲染")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// history.go()  history.forward() history.back() 浏览器跳转、前进、后退")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// history.pushState() history.replaceState() 修改浏览器的历史记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'page1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onpopstate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听浏览器前进后退")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-区别"}},[t._v("#")]),t._v(" 3. 区别")]),t._v(" "),a("ul",[a("li",[t._v("history路由模式通过pushState方法设置的新URL可以是"),a("strong",[t._v("与当前URL同源的任意URL")]),t._v("；而hash只可修改#后的部分，因此只能设置"),a("strong",[t._v("与当前URL同文档的URL")])]),t._v(" "),a("li",[t._v("pushState设置的新的URL可以和当前URL一样，也会把记录添加到历史记录栈中；而hash设置的新值必须与原来不一样才会添加")]),t._v(" "),a("li",[t._v("pushState通过stateObject参数可以添加任意类型数据，而hash只能添加短字符串")])])])}),[],!1,null,null,null);s.default=e.exports}}]);