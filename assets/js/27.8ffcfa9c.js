(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{625:function(t,r,P){"use strict";P.r(r);var _=P(11),a=Object(_.a)({},(function(){var t=this,r=t.$createElement,P=t._self._c||r;return P("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[P("blockquote",[P("p",[t._v("如果只使用socket进行网络传输，其实是基于裸TCP连接。TCP的特点是面向连接、基于字节流和可靠。TCP传输的过程中数据都以二进制串表示，接受端无法区分每个数据包的范围，会出现粘包的问题。所以出现了基于TCP的应用层协议，RPC、HTTP等。")])]),t._v(" "),P("h3",{attrs:{id:"_1-http"}},[P("a",{staticClass:"header-anchor",attrs:{href:"#_1-http"}},[t._v("#")]),t._v(" 1. HTTP")]),t._v(" "),P("p",[t._v("HTTP是浏览器厂商制定的统一的应用层协议，屏蔽了不同平台的差异。")]),t._v(" "),P("h3",{attrs:{id:"_2-rpc"}},[P("a",{staticClass:"header-anchor",attrs:{href:"#_2-rpc"}},[t._v("#")]),t._v(" 2. RPC")]),t._v(" "),P("blockquote",[P("p",[t._v("常见的RPC协议包括gRPC、thrift。除了TCP，有的RPC协议底层基于UDP、HTTP")])]),t._v(" "),P("p",[t._v("RPC(远程过程调用)是一种通信方式，而不是一种具体的通信协议。各个厂商制定的RPC协议实现方式都不同。")]),t._v(" "),P("h3",{attrs:{id:"_3-http和rpc的区别"}},[P("a",{staticClass:"header-anchor",attrs:{href:"#_3-http和rpc的区别"}},[t._v("#")]),t._v(" 3. HTTP和RPC的区别")]),t._v(" "),P("ul",[P("li",[t._v("服务发现：HTTP基于DNS找到对方的IP和端口，RPC基于etcd、consul、coreDNS等")]),t._v(" "),P("li",[t._v("底层连接：HTTP基于TCP传输JSON序列化数据，RPC也基于HTTP长连接，但拥有TCP连接池")]),t._v(" "),P("li",[t._v("序列化：HTTP传输字符串，使用JSON序列化；RPC使用protobuf等进行序列化")]),t._v(" "),P("li",[t._v("相比于HTTP1.1，RPC的性能会更好；但是HTTP2的性能甚至会好于部分RPC协议")])])])}),[],!1,null,null,null);r.default=a.exports}}]);