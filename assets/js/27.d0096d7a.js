(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{626:function(t,s,a){"use strict";a.r(s);var r=a(11),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_1-编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-编译原理"}},[t._v("#")]),t._v(" 1. 编译原理")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("编译型语言")]),t._v("和"),a("strong",[t._v("解释性语言")])]),t._v(" "),a("p",[t._v("编译型语言是在代码运行前编译器将高级编程语言转换成机器语言，如C、C++")]),t._v(" "),a("p",[t._v("解释型语言是在运行时将高级编程语言转换成机器语言，如java、javascript")])]),t._v(" "),a("li",[a("p",[t._v("编译在前端领域的应用")]),t._v(" "),a("p",[t._v("高级语言编译为机器语言：V8引擎编译JS、TypeScript编译器(tsc)")]),t._v(" "),a("p",[t._v("前端工程化：webpack loader编译器(acorn)、babel")]),t._v(" "),a("p",[t._v("前端框架语法转换：Vue Template模板编译器、jsx")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("高级语言的编译")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("编译过程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041455637.png",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("词法分析")]),t._v(" "),a("p",[t._v("分词：识别出每一个单词和符号，拆分成一个个"),a("strong",[t._v("token")]),t._v("。利用有限状态机对token进行模式匹配，识别出每一个token的类型")]),t._v(" "),a("p",[t._v("有限状态机：两个状态s1和s2, 若当前处于s1状态，输入0则进入s2状态。如表达式"),a("code",[t._v("10+20-30")]),t._v("在进行词法分析时，首先分析1判断类型为数字，则继续向后分析0，分析到+时状态改变。最终可以解析得到token数组为：[{type: 'number', value: '10'}, {type: 'ADD', value: '+'} ...]")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041455638.png",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("语法分析")]),t._v(" "),a("p",[t._v("语法分析会将词法分析得到的token数组转化为"),a("strong",[t._v("抽象语法树AST")])]),t._v(" "),a("p",[t._v("对于代码"),a("code",[t._v("const name = 'xujianglong'")]),t._v(", 生成的抽象语法树("),a("strong",[t._v("json 结构")]),t._v(")如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Program"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"body"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VariableDeclaration"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"declaration"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VariableDeclarator"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Identifier"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"init"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Literal"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"end"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xujianglong"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"raw"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xujianglong"')]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"kind"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"const"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceType"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("语义分析")]),t._v(" "),a("p",[t._v("语义分析阶段编译器对AST进行遍历，主要包括"),a("strong",[t._v("声明检查和类型检查")]),t._v("(变量是否被重复声明，const类型变量是否被改变，函数参数数量检查)")])]),t._v(" "),a("li",[a("p",[t._v("中间代码生成与优化")]),t._v(" "),a("p",[t._v("一般编译器并不会直接生成目标代码，而是先生成"),a("strong",[t._v("中间代码")]),t._v("，再生成目标代码。")])])])])]),t._v(" "),a("p",[t._v("v8引擎在编译Js时，先将AST编译为字节码，再通过JIT转换成目标代码")]),t._v(" "),a("h3",{attrs:{id:"_2-babel的编译流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-babel的编译流程"}},[t._v("#")]),t._v(" 2. Babel的编译流程")]),t._v(" "),a("blockquote",[a("p",[t._v("Babel是一个JS转换编译器，用于将ES6+语法编写的代码转换为向后兼容的JS语法，并且还可以将新的api进行polyfill")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041455639.png",alt:""}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("parse(将代码解析为AST)")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("@babel/parser")]),t._v("包(之前叫babylon)进行转换")])]),t._v(" "),a("li",[a("p",[t._v("transform(转换AST)")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("@babel/traverse")]),t._v("对AST进行深度优先遍历，对需要修改的节点进行操作("),a("strong",[t._v("替换新语法、polyfill")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("generate(生成目标代码)")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("@babel/generator")]),t._v("逆向操作AST，遍历AST根据节点类型和属性生成目标代码")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);