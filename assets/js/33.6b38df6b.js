(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{632:function(t,s,a){"use strict";a.r(s);var n=a(11),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_1-type和interface的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-type和interface的区别"}},[t._v("#")]),t._v(" 1. type和interface的区别")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("type是"),a("strong",[t._v("类型别名")]),t._v("，可以用来表示"),a("strong",[t._v("基本类型、对象类型、联合类型、元组")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("useName")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基本类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("userId")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 联合类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("arr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nuber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" userId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" userName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("interface是"),a("strong",[t._v("接口")]),t._v("，仅限于描述"),a("strong",[t._v("对象类型")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("声明合并")])]),t._v(" "),a("p",[t._v("如果多次声明一个同名的接口，TS会将它们合并到一个声明中")]),t._v(" "),a("p",[t._v("重复声明同名的type则会报错")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("最佳实践")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("React组件中props及state的类型使用type声明，这样能够保证使用组件的地方不能在上面添加属性")])]),t._v(" "),a("li",[a("strong",[t._v("在引入第三方库时的类型声明文件.d.ts中，使用interface更加灵活的类型合并")])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-使用ts的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用ts的好处"}},[t._v("#")]),t._v(" 2. 使用TS的好处")]),t._v(" "),a("p",[a("strong",[t._v("静态类型语言的类型在编译阶段确定，而动态类型语言则会在执行阶段确定变量的类型")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041455022.png",alt:"image-20220308203032728"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://picture-1305610595.cos.ap-guangzhou.myqcloud.com/202206041455023.png",alt:"image-20220308203204279"}})]),t._v(" "),a("h3",{attrs:{id:"_3-any、never、unknown、void"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-any、never、unknown、void"}},[t._v("#")]),t._v(" 3. any、never、unknown、void")]),t._v(" "),a("ul",[a("li",[t._v("any表示"),a("strong",[t._v("任意类型")]),t._v("，也是默认类型，即对any类型不作约束，"),a("strong",[t._v("编译时会跳过类型检查")]),t._v("，一般不建议使用")]),t._v(" "),a("li",[t._v("void表示"),a("strong",[t._v("无任何类型")]),t._v("，函数没有返回值")]),t._v(" "),a("li",[t._v("unknown表示"),a("strong",[t._v("未知类型")]),t._v("，即不清楚具体的数据类型，如接口返回数据。相当于any类型的安全版本，unkonwn可以被赋值为任何类型")]),t._v(" "),a("li",[t._v("never表示"),a("strong",[t._v("永不存在的类型")]),t._v("，如函数会抛出异常或死循环")])]),t._v(" "),a("h3",{attrs:{id:"_4-工具类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-工具类型"}},[t._v("#")]),t._v(" 4. 工具类型")]),t._v(" "),a("ul",[a("li",[t._v("Partial<T>: 将类型 T 的所有属性变为"),a("strong",[t._v("可选")]),t._v("属性")]),t._v(" "),a("li",[t._v("Required<T>: 将类型 T 的所有属性变为"),a("strong",[t._v("必选")]),t._v("属性")]),t._v(" "),a("li",[t._v("Readonly<T>: 将类型 T 的所有属性变为"),a("strong",[t._v("只读")]),t._v("属性")]),t._v(" "),a("li",[t._v("Pick<T,K>: 从类型 T 中"),a("strong",[t._v("选择")]),t._v("属性名为类型 K 中的属性，创建一个新类型")]),t._v(" "),a("li",[t._v("Omit<T,K>: 从类型 T 中"),a("strong",[t._v("排除")]),t._v("属性名为类型 K 中的属性，创建一个新类型")]),t._v(" "),a("li",[t._v("Exclude<T,U>: 从类型 T 中排除类型 U 中的所有属性")]),t._v(" "),a("li",[t._v("ReturnType<T>:  获取函数类型 T 的返回值类型")])]),t._v(" "),a("h3",{attrs:{id:"_5-第三方库类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-第三方库类型"}},[t._v("#")]),t._v(" 5. 第三方库类型")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lodash.d.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("module")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("utils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" utils "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);